#pragma switch
// ---------------------------------------------------------------------------------------------- //
// Aplikace pro Farní evangelizační buňky - ORA prostředí                                         //
//                                                                                                //
// Objekty = Akce, Farnosti, Lidé                                                                 //
// Relace  = na, je, má                                                                           //
// Atributy                                                                                       //
//                                                                                                //
// Ezer3                                                (c) 2018 Martin Šmídek <martin@smidek.eu> //
// ---------------------------------------------------------------------------------------------- //
panel bun { type:'plain', title:'[fa-cogs] Databáze', _sys:'*'
  proc Start() {
//    set_trace('m',1,'*.set_attrib');
//    set_trace('E',1,'OnLeftOpen,OnRightClose');
//    set_trace('E',1,'mask');
  }
  proc Clear() {
//    clear
  }
  proc onfirstfocus() {
    Start;
    cmd.relace.key(mode.get); cmd.relace.change;
    resize(sys('screen','width'),sys('screen','height')); 
    focused.set(1);
    cmd.Init;
  }
  // <editor-fold defaultstate="collapsed" desc="++++++++++++++++++++++++++ ORA functions">
  const _W1=170, _W2=340, _H1=100, _H2=100 // minimální rozměry
  // odvozené hodnoty (stejné jako v resize)
  const _R=13, _L1=10, _L2=_L1+_W1, _L3=_L2+_W2, _T1=10, _T2=_T1+_H1, _T3=_T2+_H2 
  // aktuální rozměry
  var   W1=_W1, W2=_W2, H1=_H1, H2=_H2, Rws=_R, L1=_L1, L2=_L2, L3=_L3, T1=_T1, T2=_T2, T3=_T3
  // aktuální rozměry
  var LL:object, L:object, RR:object, R:object, M:object
//      X:object // značí režim řešení duplicit
  // ORA obecně ------------------------------------------------------------------------- ORA obecně
  // resize layout
  var focused=0
  proc onresize(w,h) { 
    focused.get; 
    mask_all(1);
    resize(w,h);
    LL.lst.browse_refresh; 
    [ RR.get; RR.lst.browse_refresh ];
    mask_all(0);
  }
  proc set_panel(bl,fl,fm,br,fr) {
    hide_all; 
    [ RR.get; RR.OnRightClose() ];
    LL.set(bl); RR.set(br); 
    [ focused.get; LL.OnLeftOpen() ];
    set_left(bl,fl);
    set_right(br,fr); 
    set_mid(fm);
    layout(W1.get,W2.get,H1.get,H2.get); 
    // zhasne režim porovnávání
    [ eq(mode.get,duplicity.get) | x_note.display(0) ];
//    X.set(0); x_note.display(0); 
    // inicializace barveni, joins, ...
//    LL.OnLeftOpen;
  }
  proc set_left(b,f) {
    LL.set(b); 
    b.property(object('left',L1.get));
    LL.lst.selected('clear'); 
    cmd.vyber.display(0); 
    LL.display(1);
    L.set(f);
    f.property(object('left',L2.get,'top',T1.get));
    L.display(1);  
  }
  proc set_right(b,f) {
    RR.set(b); 
    [ b; 
      b.property(object('left',sum(L3.get,5)));
      cmd.vyber.display(1); 
      RR.display(1);
    ];
      R.set(f);
    [ f;
      f.property(object('left',sum(L2.get,10),'top',sum(T3.get,5)));
      R.display(1); 
    ]
  }
  proc set_mid(f) {
    M.set(f);
    f;
    f.property(object('left',L2.get,'top',sum(T1.get,H1.get,5)));
    M.display(1); }
  proc resize(width,height) { 
    var w:number, h:number,    // čistá šířka a výška pro práci bez okrajů a vnitřních mezer
        w1:number, w2:number, h1:number, h2:number,
        x:number, y:number
    w.set(minus(width,L1.get,L1.get,15));  
    h.set(minus(height,81,T1.get,L1.get,10));
    // nastav minimální rozměry
    w1.set(W1.get); w2.set(W2.get); h1.set(H1.get); h2.set(H2.get);
    // pokud je šířka větší než W1+W2+W1 zvětši ji
    [ gt(w,sum(_W1.get,_W2.get,_W1.get)); x.set(divide(w,4));
      w1.set(multiply(x,1)); w2.set(multiply(x,2))
    ];
    // pokud je výška větší než H1+H2+H1 zvětši ji a obnov browse
    [ gt(h,sum(_H1.get,_H2.get,_H1.get)); y.set(divide(h,9));
      h1.set(multiply(y,3)); h2.set(multiply(y,3));
    ];
    layout(w1,w2,h1,h2); 
  }
  proc layout(w1,w2,h1,h2) { 
    var l2:number, rs:number
    rs.set(divide(sum(h1,h2,h1,-35,-17,-15),17));
    // LEFT
    LL.property(object('top',T1.get,'width',sum(w1,5),'height',sum(h1,h2,h1,5)));
    L.property(object('left',sum(L1.get,w1),'width',w2,'height',h1));
    LL.set_width(minus(w1,36));
    // RIGHT
    l2.set(sum(L1.get,w1,10));
    RR.property(object('left',sum(w1,w2,15),'top',T1.get,'width',sum(w1,5),'height',sum(h1,h2,h1,5)));
    R.property(object('left',l2,'top',sum(T1.get,h1,h2,5),'width',w2,'height',h1));
    [ RR.get; RR.set_width(minus(w1,36)) ];
    // případná změna řádků browse
    [ not(eq(rs,Rws.get)); ora_rows(rs) ];
    // MID
    M.property(object('left',l2,'top',sum(T1.get,h1,5),'width',sum(w2,-10),'height',sum(h2,-6)));
    // zápis konstant
    W1.set(w1); W2.set(w2); H1.set(h1); H2.set(h2); 
    Rws.set(rs); 
    L2.set(sum(L1.get,w1)); L3.set(sum(L2.get,w2)); 
    T2.set(sum(T1.get,h1)); T3.set(sum(T2.get,h2));
  }
  // operace nad formuláři
  proc hide_all() { 
    LL.display(0); L.display(0); RR.display(0); R.display(0); M.display(0) }
  proc mask(on,f) { on;
    function('f',"jQuery('#top_mask3').fadeIn(); jQuery(f.DOM_Block).css({zIndex:2001}); return 1;",f);
  | function('f',"jQuery('#top_mask3').fadeOut(); jQuery(f.DOM_Block).css({zIndex:'initial'}); return 1;",f);  }
  proc mask_all(on) { on;
    function("jQuery('#wait_mask').fadeIn(); return 1;");
  | function("jQuery('#wait_mask').fadeOut(); return 1;");  }
  proc cmd_enable(f,on,off) { 
    f.enable(1,on); f.enable(0,off); }
  proc do_change(e) { 
    e.change }
  // operace pro objekty i relace
  proc do_uloz(f,b) { var x:text
      mask(0,f); cmd_enable(f,'e','s'); 
      f.same 
    | f.key; f.save; { b.browse_seek; f.load | f.init } 
    | f.insert; f.load; 
      x.set(substr(f.id_key,3,1));
      b.raise('onrowclick',b.browse_seek(conc(x,'.',f.id_key,'=',f.key))) 
  }
  proc do_zpet(f,b) { mask(0,f); cmd_enable(f,'e','s'); 
    f.key; f.load | f.load(b.browse_key) }
  proc do_novy(f,b) { mask(1,f); cmd_enable(f,'s','e'); 
    f.call('Init'); foreach(f.tagged('N'),do_change); }
  proc do_zrus(f,b) { 
    warning("Martin: rušení ještě není hotové"); cmd_enable(f,'e','s');  }
  proc on_chng(f) { 
    mask(1,f); cmd_enable(f,'s','e|j|d'); }
  // jen pro relace
  proc do_zmen() { 
    mask(0,M.get); cmd_enable(M,'d|x','s|j'); 
    M.same | M.save; M.load; RR.lst.browse_row }
  proc do_vrat() { mask(0,M.get); cmd_enable(M,'d|x','s|j'); 
    M.load }
  proc spoj(LR) { 
    // 12 pro spojení L.id1+R.id2, 21 pro spojení L.id2+R.id1 
    [ eq(LR,12);
      M.id1.set(L.key); M.id2.set(R.key); 
    | M.id2.set(L.key); M.id1.set(R.key); 
    ];
    M.id1.change; M.id2.change; 
    M.id.set(M.insert); 
    [ RR.lst.selected('this',RR.lst.browse_key) 
    | RR.lst.selected('toggle',RR.lst.browse_key) ];
    RR.lst.browse_row;
    mask(0,M.get); cmd_enable(M,'d|x','j|s'); }
  proc rozpoj() { var t:object
    mask(1,M.get); mask(0,M.get); 
    [ RR.lst.selected('this',RR.lst.browse_key); 
      RR.lst.selected('toggle',RR.lst.browse_key) ];
    t.set(M.tab.get);
    t.delete_record(conc(t.key_id,'=',M.key));
    [ cmd.vyber.get 
    | RR.lst.browse_row
    ];
    M.init; cmd_enable(M,'j','d|s|x'); }
  // pomocné
  proc point(x) {
//    echo(LL.get._id,'-',RR.get._id," <b class='parm'>",x,'</b> mode=',mode.get);
  }

  // </editor-fold>
  // <editor-fold defaultstate="collapsed" desc="++++++++++++++++++++++++++ ORA uses ">
  use cmd: form _cmd [0,0,,]
  use b_lidi: form _b_lidi { format:'n' }
  use f_lidi: form _f_lidi { format:'n' }
  use b_akce: form _b_akce { format:'n' }
  use f_akce: form _f_akce { format:'n' }
  use b_fara: form _b_fara { format:'n' }
  use f_fara: form _f_fara { format:'n' }
  use b_cell: form _b_cell { format:'n' }
  use f_cell: form _f_cell { format:'n' }
  use b_pack: form _b_pack { format:'n' }
  use f_pack: form _f_pack { format:'n' }
  use r_na: form _r_na     { format:'n' }
  use r_je: form _r_je     { format:'n' }
  use r_ma: form _r_ma     { format:'n' }
  use r_ve: form _r_ve     { format:'n' }
  use r_go: form _r_go     { format:'n' }
  // řešení duplicit
  use x_lidi: form _f_lidi { format:'n' }
  use x_note: form _xr_note { format:'n' }
  proc ora_rows(rs) {
    b_lidi.lst.set_attrib('rows',rs); 
    b_akce.lst.set_attrib('rows',rs); 
    b_fara.lst.set_attrib('rows',rs); 
    b_cell.lst.set_attrib('rows',rs); 
    b_pack.lst.set_attrib('rows',rs); 
    gt(rs,Rws.get);
  }
  // </editor-fold>
  // ----------------------------------------------------------==> CMD
  var mode= 2
  const lidi_akce=1, akce_lidi=2, lidi_cell=3, cell_lidi=4, lidi_fara=5, fara_lidi=6, 
        cell_fara=7, fara_cell=8, lidi_pack=9, pack_lidi=10, duplicity=11
  form _cmd [,,*,30] {
    proc onstart() {
      relace.selects(conc(
        "lidé => akce:1,akce => lidé:2,lidé => buňky:3,buňky => lidé:4,",
        "lidé => farnosti:5,farnosti => lidé:6,",
        "buňky => farnosti:7,farnosti => buňky:8,",
        "lidé => maily:9,maily => lidé:10,duplicity:11"
      ));
    }
    proc Init() { var lidi_filtr:number
      Clear;
      point('Init');
      lidi_filtr.set(cconc(eq(mode.get,duplicity.get),"1","!deleted"));
      b_lidi.lst.set_attrib('optimize.ignore','idn,idj,idm,idg,wch');
      [ b_lidi.lst.browse_load(lidi_filtr) ];
      LL.OnLeftOpen();
    }
    select relace [26,12,165,] { css:'relace', format:'t'
      proc onchanged() {
        Clear;
        b_lidi.display(0,'adresati');
        [ eq(mode.get,duplicity.get); b_lidi.lst.browse_load("!deleted") ];  
        mode.set(this.key);
        switch(mode.get,
          lidi_akce.get,{ set_panel(b_lidi.get,f_lidi.get,r_na.get,b_akce.get,f_akce.get); },
          2,{ set_panel(b_akce.get,f_akce.get,r_na.get,b_lidi.get,f_lidi.get); },
          3,{ set_panel(b_lidi.get,f_lidi.get,r_ma.get,b_cell.get,f_cell.get); },
          4,{ set_panel(b_cell.get,f_cell.get,r_ma.get,b_lidi.get,f_lidi.get); },
          5,{ set_panel(b_lidi.get,f_lidi.get,r_je.get,b_fara.get,f_fara.get); },
          6,{ set_panel(b_fara.get,f_fara.get,r_je.get,b_lidi.get,f_lidi.get); },
          7,{ set_panel(b_cell.get,f_cell.get,r_ve.get,b_fara.get,f_fara.get); },
          8,{ set_panel(b_fara.get,f_fara.get,r_ve.get,b_cell.get,f_cell.get); },
          // lidé => maily
          9,{ set_panel(b_lidi.get,f_lidi.get,r_go.get,b_pack.get,f_pack.get); },
          // maily => lidé
         10,{ set_panel(b_pack.get,f_pack.get,r_go.get,b_lidi.get,f_lidi.get); },
          // duplicity
         11,{ set_panel(b_lidi.get,f_lidi.get,x_note.get,0,x_lidi.get); }
        );
    }}
    label [200,12,,] { title:'<=>', css:'relace' proc onclick() {
      Clear;
      eq(relace.key,11);
    | eq(relace.key,1,3,5,7,9); relace.key(sum(relace.key,1)); relace.change;
    | relace.key(minus(relace.key,1)); relace.change;
    }}
    check vyber [-16,10,115,] { title:"jen vybrané", format:"t", css:'relace'  value:'1' 
      proc onchange() { Init }}
    button [0,0,,] { title:'!' skill:'a' proc onclick() { error('stop') } }
  }  
  # ==============================================================> OBJEKTY
  var curr_lidi=0, curr_akce=0, curr_fara=0, curr_pack=0, curr_cell=0
  // ----------------------------------------------------------==> LIDI
  form _b_lidi [,,1,1] { css:'ch work'
    proc OnLeftOpen() { var lidi_filtr:text
      point(conc('lidi left open id_lidi=',lst.browse_key));
      form.display(0,'adresati');
      lidi_filtr.set(cconc(eq(mode.get,duplicity.get),"1","!deleted"));
      lst.set_attrib('optimize.ignore','idn,idj,idm,idg');
      lst.wch.set_attrib('expr',"'0'");
      [ RR.get; [ cmd.vyber.get; RR.lst.selected('use') | RR.lst.selected('ignore') ]];
      [ lst.browse_key; lst.browse_seek(conc('l.id_lidi=',lst.browse_key),lidi_filtr) 
      | lst.browse_load(lidi_filtr) ];
      switch(mode.get,
        lidi_akce.get, {
          b_akce.lst.set_attrib('optimize.ignore','')
        },
        lidi_cell.get, {
          b_cell.lst.set_attrib('optimize.ignore','idv,idf')
        },
        lidi_fara.get, {
          b_fara.lst.set_attrib('optimize.ignore','idv,idc')
        },
        lidi_pack.get, { // začátek LIDI-go_PACK
//          lst.set_attrib('optimize.ignore','idn,idj,idm')
          b_pack.lst.set_attrib('optimize.ignore','');
          b_pack.lst.wgo1.set_attrib('expr',"'0'");
          b_pack.lst.wgo2.set_attrib('expr',"g.stav");
        }
      );
//      lst.wch.set_attrib('expr',"MAX(IF(l.web_change,1,0)+IF(IFNULL(n.web_change,0),2,0))");
//      [ // LIDI - AKCE 
//        eq(b_akce.get,RR.get); 
//      ];
//      [ // LIDI - CELL
//        eq(b_cell.get,RR.get); 
//      ];
//      [ // LIDI - FARA
//        eq(b_fara.get,RR.get); 
//      ];
//      [ // LIDI - PACK
//        lst.idg.set_attrib('data',g.id_pack);
//        eq(b_pack.get,RR.get); 
//        b_pack.lst.wgo1.set_attrib('expr',"0");
//        b_pack.lst.wgo2.set_attrib('expr',"g.stav");
//      ];
//      [ b_lidi.lst.browse_refresh ];
//      lst.onrowclick;
    }
    proc OnRightClose() { 
      point('lidi right close');
      lst.browse_load(1,'','',0,0,1);
      cmd.vyber.get;
      RR.lst.selected('ignore');
    }
    var x_last=0  // poslední vybraný - pro duplicity, viz onchoice
    button [6,0,,] { tag:'adresati' title:'[fa-user-plus] přidat' 
      proc onclick() { ADRESATI.Pridej(b_pack.lst.idp.get) }}
    button [70,0,,] { tag:'adresati' title:'[fa-user-times] ubrat' 
      proc onclick() { ADRESATI.Uber(b_pack.lst.idp.get) }}
    view l: table lidi
    view n: table na { join_type:'LEFT', join:" * id_lidi " }
    view j: table je { join_type:'LEFT', join:" * id_lidi " }
    view m: table ma { join_type:'LEFT', join:" * id_lidi " }
    view g: table go { join_type:'LEFT', join:" * id_lidi " }
//    view n: table na { join_type:'LEFT', join:"USING (id_lidi)" }
//    view j: table je { join_type:'LEFT', join:"USING (id_lidi)" }
//    view m: table ma { join_type:'LEFT', join:"USING (id_lidi)" }
//    view g: table go { join_type:'LEFT', join:"USING (id_lidi)" }
    browse lst [5,20,,] { rows:_R qry_rows:1 optimize:°{ignore:''} group_by:"l.id_lidi"
        css_rows:"deleted,1:skrt"
      show idl { data:l.id_lidi }
      show idn { data:n.id_na }
      show idj { data:j.id_je }
      show idm { data:m.id_ma }
      show idg { data:g.id_go }
      show deleted { data:l.deleted }
      show opravit { expr:"IF(adresa RLIKE '^[ ,;\n\s]*$',0,NOT(deleted))" }
      show jmeno { data:l.jmeno }
      // změna lidi=1, změna na=2
      show wch { expr:"MAX(IF(l.web_change,1,0)+IF(IFNULL(n.web_change,0),2,0))" }
      show prijmeni [,,70,] { title:'příjmení', data:l.prijmeni, format:'s+q*' 
          css_cell:"wch,1:right,2:middle,3:oranzovy,4:zluty,5:zeleny,6:cerveny" }
      show obec [,,65,] { title:'obec', data:l.obec, format:'sq*' 
          css_cell:"opravit,1:zluty" }
      proc onchange() {
        this.browse_count | M.Init(); f_lidi.Init
      }
      proc onrowclick() { 
        point(conc('lidi rowclick id_lidi=',lst.browse_key));
        f_lidi.Load(idl.get);
        M.Init();
        ctx.i_na.enable(0);
        switch(mode.get,
          lidi_akce.get, /* na */ { 
            f_akce.Init;
            RR.n.set_attrib('join',conc("ON n.id_akce=a.id_akce AND n.id_lidi=",idl.get));
            [ RR.lst.browse_select(conc('id_lidi=',idl.get),1) ];
            RR.lst.browse_refresh;
          },
          akce_lidi.get, /* na */ { 
            r_na.Load;
            ctx.i_na.enable(1);
          },
          lidi_cell.get, /* ma */ { 
            f_cell.Init;
            RR.m.set_attrib('join',conc("ON m.id_cell=c.id_cell AND m.id_lidi=",idl.get)); 
            [ RR.lst.browse_select(conc('id_lidi=',idl.get),1) ];
            RR.lst.browse_refresh;
          },
          cell_lidi.get, /* ma */ { 
            r_ma.Load;
          },
          lidi_fara.get, /* je */ { 
            f_fara.Init;
            RR.j.set_attrib('join',conc("ON j.id_fara=f.id_fara AND j.id_lidi=",idl.get)); 
            RR.lst.set_attrib('optimize.ignore','idv,idc');
            [ RR.lst.browse_select(conc('id_lidi=',idl.get),1) ];
            RR.lst.browse_refresh;
          },
          fara_lidi.get, /* je */ { 
            r_je.Load;
          },
          lidi_pack.get, /* go */ { 
            f_pack.Init;
            RR.g.set_attrib('join',conc("ON g.id_pack=p.id_pack AND g.id_lidi=",idl.get));
            [ RR.lst.browse_select(conc('id_lidi=',idl.get),1) ];
            RR.lst.browse_refresh;
          },
          pack_lidi.get, /* go */ { 
            r_go.Load;
          }
        );
      }
      proc onchoice(on) {
        eq(mode.get,duplicity.get);   // duplicity 
        [ x_last.get; lst.selected('clear'); x_last.set(0) ];
        x_lidi.init; 
        lst.selected('toggle');
        x_last.set(idl.get);
        x_lidi.load(idl.get)
      | eq(on,0); M.Rozpoj()
      | eq(on,1); M.Spoj() 
      }
      menu ctx { type:'context'
        item { title:'přehled a export vybraných',
          proc onclick () { 
            TISK.do(object(
              'typ','lidi',
              'hdr',"Vybraní lidé",
              'ids',lst.selected('get'),
              'tit','příjmení:15,jméno:12,věk:5,narození:12:d,ulice:25,psč:7,obec:25,stát:10',
              'fld','prijmeni,jmeno,_vek,narozeni,ulice,psc,obec,stat'
            ));
        }}
        item i_na { tag:'m' title:'přehled a export lidí na akci',
          proc onclick () { 
            TISK.do(object(
              'typ','akce-lidi',
              'hdr',"Lidé na akci",
              'cnd',conc('id_akce=',LL.lst.ida.get),      
              'tit','příjmení:15,jméno:12,věk:5,narození:12:d,ulice:25,psč:7,obec:25,stát:10,poznámka:50',
              'fld','prijmeni,jmeno,_vek,narozeni,ulice,psc,obec,stat,poznamka'
            ));
        }}
      }
    }
    proc set_width(w){
      lst.obec.width(minus(w,lst.prijmeni.width));
    }
  }
  form _f_lidi [,,1,1] { css:'ch work', style:'overflow:auto'
    // public procedury a proměnné
    proc Load(k) {
      form.load(k);
      cmd_enable(form,'e','s'); 
      form.display(not(deleted.get),'s|e|x');
      m.berweb.enable(web_change.get);
    }
    proc Init() {
      form.init; cmd_enable(form,'e','s'); 
    }
    // elementy
    view l: table lidi
    field          [-10,0,50,] { data:l.id_lidi, format:'ro' }
    field deleted { data:l.deleted }
    field web_change { data:l.web_change }
    field jmeno  [10,20  ,65,] { tag:'N', title:'^jméno', data:l.jmeno }
    field prijmeni [90,20,97,] { tag:'N', title:'^prijmeni', data:l.prijmeni }
    check knez [200,20,60,] { tag:'N', title:'kněz', data:l.knez }
    field narozeni [355,20,85,] { tag:'N', type:'date', title:'^narození', data:l.narozeni, 
        format:'r' }
    field mail    [10,55,178,] { tag:'N', title:'^mail', data:l.mail }
    field telefon  [10,90,178,] { title:'^telefon', data:l.telefon }
    field ulice  [205,55,139,] { title:'^ulice', data:l.ulice }
    select stat   [355,55,91,] {type:'map', options:cis_stat.hodnota, title:'^stát', data:l.stat }
    field psc     [205,90,42,] { title:'^PSČ', data:l.psc, format:'r' }
    field obec   [254,90,191,] { title:'^obec', data:l.obec }
//    edit adresa  [205,125,260,50] { title:'^adresa', data:l.adresa }
    // procedury
    proc onchanged() { on_chng(form); }
    // operace
    label [-10,-5,226,30] { tag:'x', css:'parm' }
    button [-181,-10,,] { tag:'s', title:"[fa-save] ulož", proc onclick() { do_uloz(form,b_lidi.lst) }}
    button [-125,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_zpet(form,b_lidi.lst) }}
    button  [-67,-10,,] { tag:'e', title:"[fa-heart] nový",proc onclick() { do_novy(form,b_lidi.lst) }}
    button  [-15,-10,,] { tag:'e', title:"[fa-times fa-red] zruš"
      proc onclick() { 
        deleted.set(1); deleted.change; form.save; b_lidi.lst.refresh
    }}
    // kontextové_menu
    menu m { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('lidi',form.key) } }
      item berweb { title:'přijmout změny', proc onclick () { 
        form.key; 
        { eq(web_change.get,'0000-00-00'); alert(jmeno.get," ",prijmeni.get,
              " si přes web osobní údaje neměnil(a) ...")
        | confirm(jmeno.get," ",prijmeni.get," si přes web změnil(a) <br>dne ", web_change.get,
              " osobní údaje. <br>Beru to na vědomí a ruším barevné upozornění.");
          web_change.set(''); web_change.change; form.save; mask(0,form);
          b_lidi.lst.browse_row;
        }
      }}
    }
  }
  // ----------------------------------------------------------==> AKCE
  form _b_akce [,,1,1] { css:'work'
    view a: table akce
    view n: table na { join_type:'LEFT', join:"id_lidi ... id_akce" }
    proc OnLeftOpen() { // začátek AKCE-na-LIDI
      point(conc('akce left open id_akce=',lst.browse_key));
      lst.set_attrib('optimize.ignore','idn,idl');
      b_lidi.lst.set_attrib('optimize.ignore','idn,idj,idm,idg');
      b_lidi.lst.wch.set_attrib('expr',"MAX(IF(l.web_change,1,0)+IF(IFNULL(n.web_change,0),2,0))");
      [ cmd.vyber.get; RR.lst.selected('use') | RR.lst.selected('ignore') ];
      [ lst.browse_key; lst.browse_seek(conc('a.id_akce=',lst.browse_key),1) 
      | lst.browse_load(1) ];
    }
    proc OnRightClose() { // konec LIDI-na-AKCE
      point('akce right close');
      cmd.vyber.get;
      RR.lst.selected('ignore');
    }
    browse lst [5,20,,] { rows:_R, qry_rows:1 optimize:°{ignore:''} group_by:"a.id_akce"
      show ida { data:a.id_akce }
      show idn { data:n.id_na }
      show idl { data:n.id_lidi }
      show web { data:a.web_stav }
      show nazev [,,85,] { title:'název', data:a.nazev, format:'tsq*', 
          css_cell:"web,1:zluty,2:zeleny" }
      show zacatek [,,65,] { title:'začátek', data:a.zacatek, format:'rs-q*' }
      proc onchange() {
        this.browse_count | M.Init(); f_akce.Init
      }
      proc onrowclick() { 
        point(conc('akce rowclick id_akce=',lst.browse_key));
        f_akce.Load(ida.get);
        M.Init();
        switch(mode.get,
          lidi_akce.get, /* > na > */ { 
            r_na.Load;
          },
          akce_lidi.get, /* < na < */ { 
            f_lidi.Init;
            b_lidi.n.set_attrib('join',conc("ON l.id_lidi=n.id_lidi AND n.id_akce=",ida.get)); 
            b_lidi.lst.browse_select(conc('n.id_akce=',ida.get),1);
            b_lidi.lst.browse_refresh;
          }
        );
      }
      proc onchoice(on) {
        eq(on,0); rozpoj
      | eq(mode.get,lidi_akce.get); spoj(12) // lidi_akce
      }
      menu { type:'context'
        item { title:'přehled a export účastníků',
          proc onclick () { 
            TISK.do(object(
              'typ','akce-lidi', 
              'hdr',conc("Účastníci akce: ",nazev.get),
              'cnd',conc("id_akce=",ida.get),
              'tit','No.:4,příjmení:15,jméno:12,věk:5,narození:12:d,ulice:25,psč:7,obec:25,stát:10,poznámky:80',
              'fld','_n,prijmeni,jmeno,_vek,narozeni,ulice,psc,obec,stat,poznamka'
            ));
        }}
      }
    }
    proc set_width(w){
      lst.nazev.width(minus(w,lst.zacatek.width));
    }
  }
  form _f_akce [,,1,1] { css:'work', style:'overflow:auto'
    // public procedury a proměnné
    proc Load(k) {
      form.load(k); html.set(web_text.get);
      cmd_enable(form,'e','s'); 
    }
    proc Init() {
      form.init; cmd_enable(form,'e','s'); html.set(''); 
    }
    // procedury
    proc Save() { ask('menu_upd_akce',2); web.p.refresh() }
    // elementy akce
    field web_text { data:akce.web_text }
    field [-10,0,50,] { data:akce.id_akce, format:'ro' }
    field [10,20,190,] { tag:'N' title:'^název', data:akce.nazev }
    field [210,20,85,] { tag:'N' type:'date', title:'^začátek', data:akce.zacatek, format:'r' }
    field [300,20,85,] { type:'date', title:'^ukončení', data:akce.konec, format:'r' }
    // web akce
    field [10,60,190,] { title:'^web:menu', data:akce.web_menu }
    label [210,45,135,20] { title:'web:ukázat článek' css:'Check3'}
    radio [210,60,135,20] { data:akce.web_stav value:'0'
      case [0,0,40,] { title:'ne', expr:'0' }
      case [35,0,60,] { title:'redakci', expr:'1' }
      case [90,0,60,] { title:'ano', expr:'2' }
      proc onchange () {
    }} 
    check [350,60,100,] { title:'online přihláška', data:akce.web_prihl }
    label html [10,85,,] { style:"overflow:auto;width:calc(100% - 15px);height:calc(100% - 90px)" }
    // procedury
    proc onchanged() { on_chng(form); }
    // specifické operace
    label  [5,-5,117,30] { css:'parm' }
    button [13,-10,,] { tag:'e', title:"[fa-upload] článek na web" proc onclick() { 
      EDITOR.Akce(form.key); Save }}
    // základní operace
    label  [-10,-5,226,30] { css:'parm' }
    button [-181,-10,,] { tag:'s', title:"[fa-save] ulož", proc onclick() { 
      do_uloz(form,b_akce.lst); Save }}
    button [-125,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_zpet(form,b_akce.lst) }}
    button  [-67,-10,,] { tag:'e', title:"[fa-heart] nový",proc onclick() { do_novy(form,b_akce.lst) }}
    button  [-15,-10,,] { tag:'e', title:"[fa-times fa-red] zruš"
      proc onclick() { do_zrus(form,b_akce.lst)}}
    // kontextové_menu
    menu { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('akce',form.key) } }
    }
  }
  // ----------------------------------------------------------==> FARA
  form _b_fara [,,1,1] { css:'work'
    proc OnLeftOpen() { 
      point(conc('fara left open id_fara=',lst.browse_key));
      lst.set_attrib('optimize.ignore','idj,idl,idv,idc');
      [ cmd.vyber.get; RR.lst.selected('use') | RR.lst.selected('ignore') ];
      [ lst.browse_key; lst.browse_seek(conc('f.id_fara=',lst.browse_key),1) 
      | lst.browse_load(1) ];
      switch(mode.get,
        fara_lidi.get, /* je */ {
          b_lidi.lst.set_attrib('optimize.ignore','idn,idm,idg');
          b_lidi.lst.wch.set_attrib('expr',"'0'");
        },
        fara_cell.get, /* ve */ {
          b_cell.lst.set_attrib('optimize.ignore','idm,idl');
        }
      );
    }
    proc OnRightClose() { 
      point('fara right close');
      cmd.vyber.get;
      RR.lst.selected('ignore');
    }
    view f: table fara
    view j: table je { join_type:'LEFT', join:"... id_fara ..." }
    view v: table ve { join_type:'LEFT', join:"... id_fara ..." }
    browse lst [5,20,,] { rows:_R, qry_rows:1 group_by:"f.id_fara"
        optimize:°{ignore:''} 
      show idf { data:f.id_fara }
      show idj { data:j.id_je }
      show idl { data:j.id_lidi }
      show idv { data:v.id_ve }
      show idc { data:v.id_cell }
      show ulice { data:f.ulice }
      show nazev { data:f.nazev }
      show telefony { data:f.telefony }
      show email { data:f.email }
      show obec  [,,110,] { title:'obec', data:f.obec, format:'ts+q*' }
      show psc   [,,40,] { title:'psc', data:f.psc, format:'tsq*' }
      proc onchange() {
        this.browse_count | M.Init(); f_fara.Init
      }
      proc onrowclick() { 
        point(conc('fara rowclick id_fara=',lst.browse_key));
        f_fara.Load(idf.get);
        M.Init();
        switch(mode.get,
          lidi_fara.get, /* je */ {
            r_je.Load;
          },
          fara_lidi.get, /* je */ {
            f_lidi.Init;
            b_lidi.j.set_attrib('join',conc("ON l.id_lidi=j.id_lidi AND j.id_fara=",idf.get)); 
            b_lidi.lst.browse_select(conc('j.id_fara=',idf.get),1);
            b_lidi.lst.browse_refresh;
          },
          cell_fara.get, /* ve */ {
            r_ve.Load;
          },
          fara_cell.get, /* ve */ {
            f_cell.Init;
            b_cell.v.set_attrib('join',conc("ON c.id_cell=v.id_cell AND v.id_fara=",idf.get)); 
            b_cell.lst.browse_select(conc('v.id_fara=',idf.get),1);
            b_cell.lst.browse_refresh;
          }
        );
//        [ // LIDI
//          eq(b_lidi.get,LL.get,RR.get); 
//          r_je.Load;
//          b_lidi.lst.browse_select(conc('id_fara=',idf.get),1);
//          b_lidi.lst.browse_refresh;
//        ];
//        [ // CELL
//          eq(b_cell.get,LL.get,RR.get); 
//          r_ve.Load;
//          eq(b_cell.get,RR.get); 
//          b_cell.lst.browse_select(conc('id_cell=',idc.get),1);
//          b_cell.lst.browse_refresh;
//        ]
      }
      proc onchoice(on) {
        eq(on,0); rozpoj
      | eq(mode.get,lidi_fara.get,cell_fara.get); spoj(12) // lidi_cell cell_fara
      | eq(mode.get,fara_cell.get); spoj(21)               // fara_cell
      }
    }
    func set_width(w){
      lst.obec.width(w-lst.psc.width());
    }
  }
  form _f_fara [,,1,1] { css:'work', style:'overflow:auto'
    // public procedury a proměnné
    proc Load(k) {
      form.load(k); cmd_enable(form,'e','s'); 
    }
    proc Init() { form.init; cmd_enable(form,'e','s');  }
    // elementy
    field [-10,0,50,] { data:fara.id_fara, format:'ro' }
    field nazev [10,20,177,] { tag:'N', title:'^název', data:fara.nazev }
    field email [10,55,178,] { tag:'N', title:'^mail', data:fara.email }
    field telefony [10,90,178,] { tag:'N', title:'^telefon', data:fara.telefony }
    field ulice [205,55,139,] { tag:'N', title:'^ulice', data:fara.ulice }
    field psc [205,90,42,] { tag:'N', title:'^PSČ', data:fara.psc, format:'r' }
    field obec [254,90,191,] { tag:'N', title:'^obec', data:fara.obec }
    // procedury
    proc onchanged() { on_chng(form); }
    // specifické operace
    label  [5,-5,137,30] { css:'parm' }
    button  [13,-10,,] { tag:'e', title:"[fa-download] přidej ze seznamu",
      func onclick() { var elem:ezer
        if (FARY.Show(form)) { 
          // pokud byla vybrána fara
          form.key(0);
          for (elem of form.tagged('N')) {
            elem.change();
          }
        }
      }
    }
//    button  [13,-10,,] { tag:'e', title:"[fa-download] přidej ze seznamu",proc onclick() { 
//      FARY.Show(form); 
//        foreach(form.tagged('N'),do_change)
//    }}
    // základní operace
    label [-10,-5,226,30] { css:'parm' }
    button [-181,-10,,] { tag:'s', title:"[fa-save] ulož", func onclick() { 
      if (!php.feb_test_psc(psc))
        alert(`nevím, kde leží PSČ ${psc} na mapě, prosím o doplnění`);
      do_uloz(form,b_fara.lst) 
    }}
    button [-125,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_zpet(form,b_fara.lst) }}
    button  [-67,-10,,] { tag:'e', title:"[fa-heart] nový",proc onclick() { do_novy(form,b_fara.lst) }}
    button  [-15,-10,,] { tag:'e', title:"[fa-times fa-red] zruš"
      proc onclick() { do_zrus(form,b_fara.lst)}}
    // kontextové_menu
    menu { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('fara',form.key) } }
    }
  }
  // ----------------------------------------------------------==> PACK (mail)
  form _b_pack [,,1,1] { css:'work'
    view p: table pack
    view g: table go { join_type:'LEFT', join:"id_lidi ... id_pack" }
    proc OnLeftOpen() { 
      point(conc('pack left open id_pack=',lst.browse_key));
      b_lidi.display(1,'adresati');
      lst.set_attrib('optimize.ignore','idg,idl');
      lst.wgo1.set_attrib('expr',"MIN(g.stav)");
      lst.wgo2.set_attrib('expr',"MAX(g.stav)");
      g.set_attrib('join',"ON g.id_pack=p.id_pack");
      b_lidi.lst.set_attrib('optimize.ignore','idn,idj,idm,idg');
      b_lidi.lst.wch.set_attrib('expr',"g.stav");
      [ cmd.vyber.get; RR.lst.selected('use') | RR.lst.selected('ignore') ];
      [ lst.browse_key; lst.browse_seek(conc('p.id_pack=',lst.browse_key),1) 
      | lst.browse_load(1) ];
    }
    proc OnRightClose() { 
      point('pack right close');
      cmd.vyber.get;
      RR.lst.selected('ignore');
    }
    browse lst [5,20,,] { rows:_R, qry_rows:1 optimize:°{ignore:''} group_by:"p.id_pack"
      show idp { data:p.id_pack }
      show idg { data:g.id_go }
      show idl { data:g.id_lidi }
      show wgo1 { expr:"0" }
      show wgo2 { expr:"g.stav" }
      show pack_subj [,,85,] { title:'název', data:p.pack_subj, format:'tsq*' 
          css_cell:"wgo1,4:zluty,5:zeleny,6:cerveny" }
      show pack_date [,,65,] { title:'začátek', data:p.pack_date, format:'rs-q*' 
          css_cell:"wgo2,4:zluty,5:zeleny,6:cerveny" }
      proc onchange() {
        this.browse_count | M.Init(); f_pack.Init
      }
      proc onrowclick() { 
        point(conc('pack rowclick id_pack=',lst.browse_key));
        f_pack.Load(idp.get);
        M.Init();
        switch(mode.get,
          lidi_pack.get, /* > go > */ { 
            r_go.Load;
          },
          pack_lidi.get, /* < go < */ { 
            f_lidi.Init;
            b_lidi.g.set_attrib('join',conc("ON l.id_lidi=g.id_lidi AND g.id_pack=",idp.get));
            b_lidi.lst.browse_select(conc('g.id_pack=',idp.get),1);
            b_lidi.lst.browse_refresh;
          }
        );
//        [ eq(b_lidi.get,RR.get); 
//          b_lidi.g.set_attrib('join',conc("ON l.id_lidi=g.id_lidi AND g.id_pack=",idp.get));
//          b_lidi.lst.browse_select(conc('g.id_pack=',idp.get),1);
//          b_lidi.lst.browse_refresh;
//        ];
//        [ eq(b_pack.get,RR.get); r_go.Load; ];
      }
      proc onchoice(on) {
        eq(on,0); rozpoj
      | eq(mode.get,lidi_pack.get); spoj(12) // lidi_pack
      }
    }
    proc set_width(w){
      lst.pack_subj.width(minus(w,lst.pack_date.width));
    }
  }
  form _f_pack [,,1,1] { css:'work'
    // public procedury a proměnné
    proc Load(k) {
      form.load(k); cmd_enable(form,'e','s'); drop.Init;
      html_text.set(pack_text.get);
    }
    proc Init() {
      form.init; cmd_enable(form,'e','s'); drop.Init;
      html_text.set('');
    }
    // elementy
    field [-10,0,50,] { data:pack.id_pack, format:'ro' }
    field pack_subj [10,20,240,] { tag:'N' title:'^předmět mailu' data:pack.pack_subj }
    field pack_date [263,20,90,] { tag:'N' type:'date', title:'^datum odeslání' data:pack.pack_date format:'r'}
    field pack_text { data:pack.pack_text }
    // ==> připojení příloh
    field attach { data:pack.pack_encl }                  // datové pole se seznamem příloh
    label [13,43,411,] {title:'myší sem lze přetáhnout přílohy, zrušit a stáhnout pak kontextovým menu' }
    label drop [10,60,340,37] { type:'drop'
      proc onload(f) {                                    // po dokončení přenosu
        ask('feb_pack_attach',form.key,f);                // přidání souboru k dávce
      }
      proc onmenu(op,name,ref) {  // op=remove|remove-all
        { eq(op,'remove');     ask('feb_pack_detach',form.key,name) // odebrání přílohy
        | eq(op,'remove-all'); ask('feb_pack_detach_all',form.key)  // odebrání všech příloh
        | warning('zatím neimplementovaná operace')
        };
        attach.set(ask('select','pack_encl','pack',conc("id_pack=",form.key)));
        Init
      }
      proc Init() {                                    // inicializace - je třeba na začátku
        drop.init('/docs/prilohy','S:');                // naplnit pole drag&drop a definovat dir
        drop.set(attach.get);
      }
    }
    label html_text [10,102,,] { 
        style:"overflow:auto;width:calc(100% - 15px);height:calc(100% - 107px)" }
    // specifické operace
    label p_cmd [5,-5,175,30] { css:'parm' }
    button [14,-10,,] { tag:'e', title:"[fa-edit] upravit text" proc onclick() { 
      EDITOR.Pack(form.key);
      Load(form.key);
    }}
    button [107,-10,,] { tag:'e', title:"[fa-send] odeslat", proc onclick() { MAIL.Send }}
    // procedury
    proc onchanged() { on_chng(form); }
    // základní operace
    label  [-10,-5,226,30] { css:'parm' }
    button [-181,-10,,] { tag:'s', title:"[fa-save] ulož"  proc onclick() { do_uloz(form,b_pack.lst) }}
    button [-125,-10,,] { tag:'s', title:"[fa-undo] zpět"  proc onclick() { do_zpet(form,b_pack.lst) }}
    button  [-67,-10,,] { tag:'e', title:"[fa-heart] nový" proc onclick() { do_novy(form,b_pack.lst) }}
    button  [-15,-10,,] { tag:'e', title:"[fa-times fa-red] zruš" 
      proc onclick() { do_zrus(form,b_pack.lst)}}
    // kontextové_menu
    menu { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('pack',form.key) } }
    }
  }
  // ----------------------------------------------------------==> CELL (buńka)
  form _b_cell [,,1,1] { css:'work'
    proc OnLeftOpen() { 
      point(conc('cell left open id_cell=',lst.browse_key));
      lst.set_attrib('optimize.ignore','idv,idf');
      [ cmd.vyber.get; RR.lst.selected('use') | RR.lst.selected('ignore') ];
      [ lst.browse_key; lst.browse_seek(conc('c.id_cell=',lst.browse_key),1) 
      | lst.browse_load(1) ];
      switch(mode.get,
        cell_lidi.get, /* ma */ {
          b_lidi.lst.set_attrib('optimize.ignore','idn,idj,idg');
          b_lidi.lst.wch.set_attrib('expr',"'0'");
        },
        cell_fara.get, /* ve */ {
          b_fara.lst.set_attrib('optimize.ignore','idj,idl');
        }
      );
    }
    proc OnRightClose() { 
      point('cell right close');
      cmd.vyber.get;
      RR.lst.selected('ignore');
    }
    view c: table cell
    view m: table ma { join_type:'LEFT', join:"ON m.id_cell=c.id_cell" }
    view v: table ve { join_type:'LEFT', join:"ON v.id_cell=c.id_cell" }
    browse lst [5,20,,] { rows:_R, qry_rows:1 optimize:°{ignore:''} group_by:"c.id_cell"
      show idc { data:c.id_cell }
      show idm { data:m.id_ma }
      show idl { data:m.id_lidi }
      show idv { data:v.id_ve }
      show idf { data:v.id_fara }
      show web { data:c.web_stav }
      show nazev [,,85,] { title:'název', data:c.nazev, format:'ts+q*' 
          css_cell:"web,1:zluty,2:zeleny" }
      show stav [,,65,] { title:'stav', data:c.stav, format:'tsq*' }
      proc onchange() {
        this.browse_count | M.Init(); f_cell.Init
      }
      proc onrowclick() { 
        point(conc('cell rowclick id_cell=',lst.browse_key));
        f_cell.Load(idc.get);
        M.Init();
        switch(mode.get,
          lidi_cell.get, /* ma */ {
            r_ma.Load;
          },
          cell_lidi.get, /* ma */ {
            f_lidi.Init;
            b_lidi.m.set_attrib('join',conc("ON l.id_lidi=m.id_lidi AND m.id_cell=",idc.get)); 
            b_lidi.lst.browse_select(conc('m.id_cell=',idc.get),1);
            b_lidi.lst.browse_refresh;
          },
          fara_cell.get, /* ve */ {
            r_ve.Load;
          },
          cell_fara.get, /* ve */ {
            f_fara.Init;
            b_fara.v.set_attrib('join',conc("ON f.id_fara=v.id_fara AND v.id_cell=",idc.get)); 
            b_fara.lst.browse_select(conc('v.id_cell=',idc.get),1);
            b_fara.lst.browse_refresh;
          }
        );
      }
      proc onchoice(on) {
        eq(on,0); rozpoj
      | eq(mode.get,lidi_cell.get,fara_cell.get); spoj(12) // lidi_cell fara_cell
      | eq(mode.get,lidi_cell.get); spoj(21)               // cell_fara
      }
    }
    proc set_width(w){
      lst.nazev.width(minus(w,lst.stav.width));
    }
  }
  form _f_cell [,,1,1] { css:'work', style:'overflow:auto'
    // public procedury a proměnné
    proc Init() {
      form.init; cmd_enable(form,'e','s'); 
    }
    proc Load(k) {
      form.load(k); html.set(web_text.get);
      cmd_enable(form,'e','s'); 
    }
    // procedury
    proc Save() { ask('menu_upd_bunka',2); web.p.do_refresh.set(1); }
    // elementy akce
    field web_text { data:cell.web_text }
    field [-10,0,50,] { data:cell.id_cell, format:'ro' }
    field nazev [10,20,190,] { title:'^název', data:cell.nazev }
    field stav [210,20,189,] { title:'^stav', data:cell.stav }
    // web akce
    field [10,60,190,] { title:'^web:menu', data:cell.web_menu }
    label [210,45,135,20] { title:'web:ukázat článek' css:'Check3'}
    radio [210,60,135,20] { data:cell.web_stav value:'0'
      case [0,0,40,] { title:'ne', expr:'0' }
      case [35,0,60,] { title:'redakci', expr:'1' }
      case [90,0,60,] { title:'ano', expr:'2' }
      proc onchange () {
    }} 
    label html [10,85,,] { style:"overflow:auto;width:calc(100% - 15px);height:calc(100% - 90px)" }
    // specifické operace
    label  [5,-5,117,30] { css:'parm' }
    button [13,-10,,] { tag:'e', title:"[fa-upload] článek na web" proc onclick() { 
      EDITOR.Bunka(form.key); Save }}
    // procedury
    proc onchanged() { on_chng(form); }
    // operace
    label [-10,-5,226,30] { css:'parm' }
    button [-181,-10,,] { tag:'s', title:"[fa-save] ulož", proc onclick() { 
      do_uloz(form,b_cell.lst); Save }}
    button [-125,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_zpet(form,b_cell.lst) }}
    button  [-67,-10,,] { tag:'e', title:"[fa-heart] nový",proc onclick() { do_novy(form,b_cell.lst) }}
    button  [-15,-10,,] { tag:'e', title:"[fa-times fa-red] zruš",proc onclick() { do_zrus(form,b_cell.lst)}}
    // kontextové_menu
    menu { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('cell',form.key) } }
    }
  }
  # ==============================================================> RELACE
  // ----------------------------------------------------------==> LIDI na AKCE
  form _r_na [,,1,1] { css:'rel', style:'overflow:auto'
    // public procedury a proměnné
    proc Init() {
      form.init; cmd_enable(form,'j','d|s|x') }
    proc Load() {
      form.load(0,conc('id_lidi=',f_lidi.key,' AND id_akce=',f_akce.key));
      m.berweb.enable(web_change.get);
      cmd_enable(form,'d|x','j|s') 
    | Init }
    proc Spoj() { 
      funkce.key(1); funkce.change;
      [ eq(LL.get,b_lidi.get); spoj(12) | spoj(21) ];
      form.plain;
    }
    proc Rozpoj() { rozpoj }
    var tab:object
    // public procedury
    proc onstart() { tab.set(na) }
    view n: table na
    field id [-10,0,50,] { data:n.id_na, help:'-', format:'ro' }
    field id1 {data:n.id_lidi }
    field id2 {data:akce.id_akce }
    field web_change { data:na.web_change }
    // položky
    select funkce [10,20,100,] { tag:'x', title:'^funkce', type:'map', data:n.funkce 
        options:map_funkce_n.hodnota }
    field web_change [120,20,90,] { tag:'x' type:'date' title:'^změna z webu', data:n.web_change }
    edit poznamka [10,55,448,75] { tag:'x', title:'^poznámka', data:n.poznamka 
        style:"width:calc(100% - 25px)" }
    // procedury
    proc onchanged() { on_chng(form); }
    // operace
    label [-10,-5,239,30] { css:'parm' }
    button [-194,-10,,] { tag:'s', title:"[fa-save] ulož", proc onclick() { do_zmen }}
    button [-138,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_vrat }}
    button  [-82,-10,,] { tag:'j', title:"[fa-plug fa-rotate-180] spoj", 
      proc onclick() { Spoj }}
    button  [-15,-10,,] { tag:'d', title:"[fa-plug fa-rotate-180 fa-red] rozpoj"
      proc onclick() { Rozpoj }}
    // kontextové_menu
    menu m { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('na',form.key) } }
      item berweb { title:'přijmout změny', proc onclick () {
        form.key; 
        { eq(web_change.get,'0000-00-00');  
          alert(b_lidi.lst.jmeno.get," ",b_lidi.lst.prijmeni.get," si přes web účast neměnil(a) ...")
        | confirm(b_lidi.lst.jmeno.get," ",b_lidi.lst.prijmeni.get,
              " si přes web změnil(a) <br>dne ", web_change.get,
              " účast na akci. <br>Beru to na vědomí a ruším barevné upozornění.");
          web_change.set(''); web_change.change; form.save; mask(0,form);
          b_lidi.lst.browse_row;
        }
      }}
    }
  }
  // ----------------------------------------------------------==> LIDI je FARA
  form _r_je [,,1,1] { css:'rel', style:'overflow:auto'
    // public procedury a proměnné
    proc Init() {
      form.init; cmd_enable(form,'j','d|s|x') }
    proc Load() {
      form.load(0,conc('id_lidi=',f_lidi.key,' AND id_fara=',f_fara.key));
      cmd_enable(form,'d|x','j|s') 
    | Init }
    proc Spoj() { 
      funkce.key(1); funkce.change;
      [ eq(LL.get,b_lidi.get); spoj(12) | spoj(21) ];
      form.plain;
    }
    proc Rozpoj() { rozpoj }
    var tab:object
    // globální funkce
    proc onstart() { tab.set(je) }
    view j: table je
    field id [-10,0,50,] { data:j.id_je, help:'-', format:'ro' }
    field id1 {data:j.id_lidi }
    field id2 {data:fara.id_fara }
    // položky
    select funkce [10,20,150,] { tag:'x', title:'^funkce', type:'map', data:j.funkce 
        options:map_funkce_j.hodnota }
    // procedury
    proc onchanged() { on_chng(form); }
    // operace
    label [-10,-5,239,30] { css:'parm' }
    button [-194,-10,,] { tag:'s', title:"[fa-save] ulož", proc onclick() { do_zmen }}
    button [-138,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_vrat }}
    button  [-82,-10,,] { tag:'j', title:"[fa-plug fa-rotate-180] spoj"
      proc onclick() { Spoj }}
    button  [-15,-10,,] { tag:'d', title:"[fa-plug fa-rotate-180 fa-red] rozpoj", 
      proc onclick() { Rozpoj }}
    // kontextové_menu
    menu { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('je',form.key) } }
    }
  }
  // ----------------------------------------------------------==> LIDI go PACK (mail)
  form _r_go [,,1,1] { css:'rel', style:'overflow:auto'
    // public procedury a proměnné
    proc Init() { 
      form.init; cmd_enable(form,'j','d|s|x'); }
    proc Load() {
      form.load(0,conc('id_lidi=',f_lidi.key,' AND id_pack=',f_pack.key));
      cmd_enable(form,'d|x','j|s') 
    | Init }
    proc Spoj() { 
      funkce.key(0); funkce.change;
      [ eq(LL.get,b_lidi.get); spoj(12) | spoj(21) ];
      form.plain;
    }
    proc Rozpoj() { rozpoj }
    var tab:object
    // globální funkce
    proc onstart() { tab.set(go) }
    view g: table go
    field id [-10,0,50,] { data:g.id_go, help:'-', format:'ro' }
    field id1 {data:g.id_lidi }
    field id2 {data:pack.id_pack }
    // položky
    select funkce [10,20,150,] { tag:'x', title:'^stav', type:'map', data:g.stav 
        options:map_funkce_g.hodnota }
    // procedury
    proc onchanged() { on_chng(form); }
    // operace
    label [-10,-5,239,30] { css:'parm' }
    button [-194,-10,,] { tag:'s', title:"[fa-save] ulož", proc onclick() { do_zmen; LL.lst.browse_refresh }}
    button [-138,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_vrat }}
    button  [-82,-10,,] { tag:'j', title:"[fa-plug fa-rotate-180] spoj", 
      proc onclick() { Spoj }}
    button  [-15,-10,,] { tag:'d', title:"[fa-plug fa-rotate-180 fa-red] rozpoj", 
      proc onclick() { Rozpoj }}
    // kontextové_menu
    menu { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('go',form.key) } }
    }
  }
  // ----------------------------------------------------------==> LIDI ma CELL
  form _r_ma [,,1,1] { css:'rel', style:'overflow:auto'
    // public procedury a proměnné
    proc Init() {
      form.init; cmd_enable(form,'j','d|s|x') }
    proc Load() {
      form.load(0,conc('id_lidi=',f_lidi.key,' AND id_cell=',f_cell.key));
      cmd_enable(form,'d|x','j|s') 
    | Init }
    proc Spoj() {
      funkce.key(2); funkce.change;
      [ eq(LL.get,b_lidi.get); spoj(12) | spoj(21) ];
      form.plain;
    }
    proc Rozpoj() {
      rozpoj
    }
    var tab:object
    // globální funkce
    proc onstart() { tab.set(ma) }
    view m: table ma
    field id [-10,0,50,] { data:m.id_ma, help:'-', format:'ro' }
    field id1 {data:m.id_lidi }
    field id2 {data:cell.id_cell }
    // položky
    select funkce [10,20,120,] { tag:'x', title:'^funkce', type:'map', data:m.funkce 
        options:map_funkce_m.hodnota }
    edit poznamka [10,55,448,75] { tag:'x', title:'^poznámka', data:m.poznamka }
    // procedury
    proc onchanged() { on_chng(form); }
    // operace
    label [-10,-5,239,30] { css:'parm' }
    button [-194,-10,,] { tag:'s', title:"[fa-save] ulož", proc onclick() { do_zmen }}
    button [-138,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_vrat }}
    button  [-82,-10,,] { tag:'j', title:"[fa-plug fa-rotate-180] spoj"  
      proc onclick() { Spoj }}
    button  [-15,-10,,] { tag:'d', title:"[fa-plug fa-rotate-180 fa-red] rozpoj", 
      proc onclick() { Rozpoj }}
    // kontextové_menu
    menu { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('ma',form.key) } }
    }
  }
  // ----------------------------------------------------------==> CELL ve FARA
  form _r_ve [,,1,1] { css:'rel', style:'overflow:auto'
    // public procedury a proměnné
    proc Init() {
      form.init; cmd_enable(form,'j','d|s|x') }
    proc Load() {
      form.load(0,conc('id_cell=',f_cell.key,' AND id_fara=',f_fara.key));
      cmd_enable(form,'d|x','j|s') 
    | Init }
    proc Spoj() { eq(LL.get,b_lidi.get); spoj(12) | spoj(21) }
    proc Rozpoj() { rozpoj }
    var tab:object
    // globální funkce
    proc onstart() { tab.set(ve) }
    // elementy
    view v: table ve
    field id [-10,0,50,] { data:v.id_ve, help:'-', format:'ro' }
    field id1 {data:cell.id_cell }
    field id2 {data:fara.id_fara }
    // položky
    select funkce [10,20,210,] { tag:'x', title:'^druh buňky', type:'map', data:v.funkce 
        options:map_funkce_v.hodnota }
    edit poznamka [10,55,448,75] { tag:'x', title:'^poznámka', data:v.poznamka }
    // procedury
    proc onchanged() { on_chng(form); }
    // operace
    label [-10,-5,239,30] { css:'parm' }
    button [-194,-10,,] { tag:'s', title:"[fa-save] ulož", proc onclick() { do_zmen }}
    button [-138,-10,,] { tag:'s', title:"[fa-undo] zpět", proc onclick() { do_vrat }}
    button  [-82,-10,,] { tag:'j', title:"[fa-plug fa-rotate-180] spoj", 
      proc onclick() { eq(mode.get,cell_fara.get); spoj(12) | spoj(21) }}
    button  [-15,-10,,] { tag:'d', title:"[fa-plug fa-rotate-180 fa-red] rozpoj"
      proc onclick() { rozpoj }}
    // kontextové_menu
    menu { type:'context'
      item { title:'ukázat změny', proc onclick () {
        form.key; track.back_show('ve',form.key) } }
    }
  }
  // ----------------------------------------------------------==> NOTE pro dulicity
  form _xr_note [,,1,1] { css:'rel', style:'overflow:auto'
    // public procedury a proměnné
    proc Init() { form.init }
    // elementy
    label [10,10,470,170] { title:"Každý člověk by v databázi měl mít jenom jeden záznam, 
    <br>pokud má dva, je třeba je <i>sloučit</i>. Dělá se to třeba takto:<br>
    <br>1. Pro odstranění duplicit je dobré seřadit si záznamy lidí podle příjmení
    <br>2. Stiskem klávesy <b>Insert</b> se horší záznam zobrazí v dolním formuláři
    <br>3. Kliknutím na správnější výskyt se lepší údaje zobrazí nahoře
    <br>4. Podle úvahy přepíšeš údaje ze spodního do horního formuláře
    <br>5. Nakonec se tlačítkem <b>[Spojit!]</b> zachová jen horní záznam 
          <br>(aplikace propojí účasti v buňkách, seminářích, ...)" 
    }
    button [-10,10,,] { title:"Spojit!" 
    proc onclick() { var y:object
      y.set(ask('lidi_spojit',f_lidi.key,x_lidi.key,0));
      y.ok;
      [ confirm(y.msg);
        y.set(ask('lidi_spojit',f_lidi.key,x_lidi.key,1));
        b_lidi.lst.browse_seek;
        warning(y.msg)
      ]
    | alert(y.msg)    
    }}
  }
  # ==============================================================> UTILITY
  // ---------------------------------==> přidávání adresátů
  panel ADRESATI [0,0,410,270] { title:' Přidat adresáty mailu', type:'popup'
    proc Pridej(_idp) {
      curr_idp.set(_idp);
      g.init;
      g.akce.browse_load;
      g.maily.browse_load;
      g.display(2,'a');
      g.vyber_adr.key(1); g.vyber_adr.change;
      [ panel.modal(sum(8,L2.get),sum(67,T2.get)) ]
    }
    proc Uber(_idp) { Pridej(_idp) }
    use g: form _g [0,0,,]
    var curr_idp: number
    form _g [,,400,270] {
      proc onstart() {
        vyber_adr.selects(conc("z účastníků minulé akce:1,z adresátů jiných mailů:2,",
              "podle vlastností a rolí:3"));
      }
      var koho:text,
          tab:text, rel:text,
          id_tab: number
      select vyber_adr [0,12,300,] { title:'^výběr adresátů' format:'t'
        proc onchanged() { 
          switch(this.key,
            1,{ form.display(2,'a'); koho.set('účastníky'); 
                tab.set('akce'); rel.set('na'); 
                id_tab.set(akce.ida.get);
              },
            2,{ form.display(2,'m'); koho.set('adresáty'); 
                tab.set('pack'); rel.set('go'); 
                id_tab.set(maily.idp.get);
              },
            3,{ form.display(2,'v'); koho.set('vybrané'); }
          );
          pridat.set(conc("<i class='fa fa-plus'></i> přidat ",koho.get));
          ubrat.set(conc("<i class='fa fa-minus'></i> ubrat ",koho.get));
      }}
      // a - účastníci akcí
      view na_a: table akce { join:"USING (id_akce)" }
      view na_l: table lidi { join:"USING (id_lidi)" }
      browse akce [0,40,,] { tag:'a' rows:10 qry_rows:1 group_by:'id_akce'
        show idn { data:na.id_na }
        show idl { data:na_l.id_lidi }
        show ida { data:na_a.id_akce }
        show nazev [,,150,] { title:'název', data:na_a.nazev, format:'tsq*' }
        show zacatek [,,70,] { title:'začátek', data:na_a.zacatek, format:'rs-q*' }
        show lidi [,,45,] { title:'adres' expr:"COUNT(*)" format:'r' }
        proc onrowclick() { id_tab.set(ida.get); }
      }
      // m - adresáti mailů
      view go_p: table pack { join:"USING (id_pack)" }
      view go_l: table lidi { join:"USING (id_lidi)" }
      browse maily [0,40,,] { tag:'m' rows:10 qry_rows:1 group_by:'id_pack'
        show idg { data:go.id_go }
        show idp { data:go_p.id_pack }
        show idl { data:go_l.id_lidi }
        show pack_subj [,,150,] { title:'název', data:go_p.pack_subj, format:'tsq*' }
        show pack_date [,,70,] { title:'odesláno', data:go_p.pack_date, format:'rs-q*' }
        show lidi [,,45,] { title:'adres' expr:"COUNT(*)" format:'r' }
        proc onrowclick() { id_tab.set(idp.get); }
      }
      // v - podle vlastností a rolí
      check knez [0,50,100,] { tag:'v' format:'t' title:"kněží" }
      check vedb [0,70,100,] { tag:'v' format:'t' title:"vedoucí buněk" }
      check clnb [0,90,100,] { tag:'v' format:'t' title:"členové buněk" }
      // ovládání změn
      proc zmenit(on,sloveso) { var y:text
        { eq(vyber_adr.key,1,2);
          y.set(ask('feb_pack_menit_lidi_12',curr_idp.get,on,rel.get,tab.get,id_tab.get))
        |  eq(vyber_adr.key,3);
          y.set(ask('feb_pack_menit_lidi_3',curr_idp.get,on,knez.get,vedb.get,clnb.get))
        };
        RR.lst.browse_select(conc('g.id_pack=',curr_idp.get),1);
        RR.lst.browse_refresh;
        alert("bylo ",sloveso," ",y," adresátů")
      }
      label [307,40,90,50] { title:'pozměnit již vybrané adresáty:' }
      button pridat [305,76,,] { title:'přidat účastníky' proc onclick() { zmenit(1,"přidáno") }}
      button ubrat [305,102,,] { title:'ubrat účastníky' proc onclick() { zmenit(0,"ubráno") }}
      button [305,-10,,] { title:'[fa-power-off] [konec' proc onclick() { panel.hide; }}
    }
  }
  // ---------------------------------==> odesílání mailů
  panel MAIL [0,0,410,400] { title:' Odesílání mailu vybraným adresátům', type:'popup'
    proc onstart() {
      g.from.set(sys('user','options','email'));
      g.zkus.set(g.from.get);
      g.name.set(sys('user','options','vyrizuje'));
      g.davka.change;
    }
    proc Send() {
      g.html.set(f_pack.html_text.get);
      g.encl.set(f_pack.attach.get);
      [ panel.modal(sum(8,L2.get),sum(67,T1.get)) ]
    }
    use g: form _g [0,0,,]
    form _g [,,400,270] {
      // výběr SMTP serveru
      select smtp [105,1,245,17] { type:'map', options:map_smtp_srv.zkratka, title:'odesílat z adresy:'
        help:'smtp|použitý odesílací server', format:'t'
        proc onchanged() { var ok:text
          ask('sys_user_change',sys('user','id_user'),'opt','smtp',smtp.key);
        }
      }
      // odpovědi na adresu, použít patičku
      field from [105,20,243,17] { title:'adresa pro odpovědi:'
        help:'email z osobního nastavení', format:'t'  }
      field name [105,39,243,17] { title:'... jméno:'
        help:"'vyřizuje' z osobního nastavení", format:'t'  }
      check foo [356,19,65,] { title:'patička', value:'0', format:'t', 
        proc onchange() {
          pata.set(''); this.get; pata.set(sys('user','options','email_foot'));
        } 
      }
      // test
      label [0,63,410,2] { style:'border-top:1px solid green' }
      label [5,57,,12] { title:'1) testovací mail' style:'padding:0 3px;color:#C0E2C2;background:green'}
      field zkus [105,69,243,17] { title:'poslat test na adresu:' 
        help:'email z osobního nastavení', format:'t' }
      button test [362,69,,] { title:'[fa-send-o] test'
        help:'pro kontrolu - posílá se 1 mail na testovací adresu'
        proc onclick () { var foot:text, y:object
          msg.set(''); foot.set('');
          confirm('Poslat zkušební mail na ',zkus.get,' ?');
          [ foo.get; foot.set(sys('user','options','email_foot')) ]; 
          y.set(ask('feb_pack_send',f_pack.key,0,from.get,name.get,zkus.get,r_go.key,foot.get));
          msg.set(y._html);
        }
      }
      // postupné odesílání
      label [0,94,410,2] { style:'border-top:1px solid green' }
      label [5,88,,12] { title:'2) ostré rozesílání' style:'padding:0 3px;color:#C0E2C2;background:green'}
      label  [0,103,364,11] { title:'postupně odesílat po:' css:'parm' 
          style:'color:white;padding:11px 0 11px 40px'}
      field davka [150,110,30,17] { 
        format:'rt', value:'10'
        proc onchange () {
          send.set(replace_fa(conc('[fa-send-o] až ',davka.get,'  ještě neposlaných')));
        }
      }
      button send [195,111,,] { title:'xx ještě neposlaných'
        help:'pošle další dávku - počet lze měnit políčkem vlevo'
        proc onclick () { var foot:text, y:object
          msg.set(''); foot.set('');
          confirm(conc('Opravdu poslat dalších ',davka.get,' mailů "z adresy" ',from.get,'?'));
          [ foo.get; foot.set(sys('user','options','email_foot')) ]; 
          y.set(ask('feb_pack_send',f_pack.key,davka.get,from.get,name.get,0,0,foot.get));
          msg.set(y._html);
          LL.lst.browse_refresh; 
          [ RR.get; RR.lst.browse_refresh ];
        }
      }
      label msg [0,150,400,50] { style:"overflow:auto;border-top:1px solid green;padding:5px" }
      label [5,146,,12] { title:'informace o odeslání' 
          style:'padding:0 3px;color:#C0E2C2;background:green'}
      // opis mailu, příloh, patičky
      label html [0,210,400,50] { style:"overflow:auto;border-top:1px solid green;padding:5px" }
      label [5,204,,12] { title:'odesílaný mail' style:'padding:0 3px;color:#C0E2C2;background:green'}
      label encl [0,270,400,50] { style:"overflow:auto;border-top:1px solid green;padding:5px" }
      label [5,264,,12] { title:'přílohy' style:'padding:0 3px;color:#C0E2C2;background:green'}
      label pata [0,330,400,50] { style:"overflow:auto;border-top:1px solid green;padding:5px" }
      label [5,324,,12] { title:'připojená patička' style:'padding:0 3px;color:#C0E2C2;background:green'}
    }
  }
}
// CMS sdruženého webu
panel web { type:'plain', title:'[fa-laptop] Web', _sys:'*', include:'onload' 
  group p { var do_refresh:number }
} 
